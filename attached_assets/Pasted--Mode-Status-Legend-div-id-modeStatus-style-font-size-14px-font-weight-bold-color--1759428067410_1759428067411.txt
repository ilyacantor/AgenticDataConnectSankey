<!-- Mode Status + Legend -->
<div id="modeStatus" style="font-size:14px; font-weight:bold; color:#e6eef5; margin-bottom:6px;">
  Mode: Showing <span id="modeLabel">Source Schema Only</span>
</div>

<div id="legend" style="margin: 8px 0; font-size: 13px; color: #bfe1ff;">
  <strong>Legend:</strong>
  <span style="color:#4a90e2;">■ Source Tables (in Cloud)</span>
  <span style="margin-left:12px; color:#2ecc71;">■ Unified Ontology (in Company Block)</span>
  <span style="margin-left:12px; color:#9b59b6;">— Mapping Edges (After Mode)</span>
</div>

<!-- Graph container -->
<div id="cy"></div>

<style>
  #cy {
    width: 100%;
    height: 520px;        /* fixed height */
    min-height: 520px;
    max-height: 520px;
    border: 1px solid #1b2430;
    border-radius: 12px;
    background: #0a0f15;
    overflow: hidden;
  }
</style>

<script>
  // Init Cytoscape
  cy = cytoscape({
    container: document.getElementById('cy'),
    elements: [],
    style: [
      {
        selector: 'node[type="source"]',
        style: {
          'background-color': '#4a90e2',
          'label': 'data(label)',
          'color': '#ffffff',
          'font-size': 13,
          'text-valign': 'center',
          'text-halign': 'center',
          'shape': 'round-rectangle',
          'padding': '8px',
          'width': 'label',
          'height': 'label'
        }
      },
      {
        selector: 'node[type="ontology"]',
        style: {
          'background-color': '#2ecc71',
          'label': 'data(label)',
          'color': '#ffffff',
          'font-size': 13,
          'text-valign': 'center',
          'text-halign': 'center',
          'shape': 'round-rectangle',
          'padding': '8px',
          'width': 'label',
          'height': 'label',
          'opacity': 0
        }
      },
      {
        selector: 'node[type="container"]',
        style: {
          'background-color': 'data(bgcolor)',
          'opacity': 0.15,
          'shape': 'round-rectangle',
          'width': 260,
          'height': 300,
          'text-valign': 'top',
          'font-size': 14,
          'font-weight': 'bold',
          'color': '#ffffff',
          'padding': '20px'
        }
      },
      {
        selector: 'edge[type="mapping"]',
        style: {
          'line-color': '#9b59b6',
          'width': 2,
          'line-style': 'dashed',
          'curve-style': 'straight',
          'target-arrow-shape': 'triangle',
          'target-arrow-color': '#9b59b6',
          'opacity': 0
        }
      }
    ],
    layout: { name: 'preset' }
  });

  // Lock viewport
  cy.userZoomingEnabled(false);
  cy.userPanningEnabled(false);
  cy.boxSelectionEnabled(false);

  // Helpers for placement
  function getGridPosition(type, rowIndex) {
    const xSource = 100;
    const xOntology = 500;
    const yStart = 140;
    const ySpacing = 100;
    return {
      x: type === 'source' ? xSource : xOntology,
      y: yStart + rowIndex * ySpacing
    };
  }

  // Containers
  function addContainers() {
    cy.add({
      group: "nodes",
      data: { id: "dyn_cloud", label: "Dynamics CRM", type: "container", bgcolor: "#4a90e2" },
      position: { x: 100, y: 200 },
      locked: true
    });

    cy.add({
      group: "nodes",
      data: { id: "unified_block", label: "Initech Corp.", type: "container", bgcolor: "#2ecc71" },
      position: { x: 500, y: 200 },
      locked: true,
      style: { 'opacity': 0 } // start hidden
    });
  }

  // Add nodes + mappings
  function addSourceMapping(sourceId, sourceLabel, ontologyId, ontologyLabel, rowIndex) {
    cy.add({
      group: "nodes",
      data: { id: sourceId, label: sourceLabel, type: "source" },
      position: getGridPosition("source", rowIndex),
      locked: true
    });

    cy.add({
      group: "nodes",
      data: { id: ontologyId, label: ontologyLabel, type: "ontology" },
      position: getGridPosition("ontology", rowIndex),
      locked: true
    });

    cy.add({
      group: "edges",
      data: { id: sourceId + "_" + ontologyId, source: sourceId, target: ontologyId, type: "mapping" }
    });
  }

  // Toggle behavior
  function updateModeLabel(isAfter) {
    document.getElementById("modeLabel").textContent =
      isAfter ? "Source + Unified Ontology Mappings" : "Source Schema Only";
  }

  function revealAfter() {
    cy.getElementById('unified_block').style('opacity', 0.15);
    cy.nodes('[type="ontology"]').animate({ style: { opacity: 1 }, duration: 600 });
    cy.edges('[type="mapping"]').animate({ style: { opacity: 1 }, duration: 600 });
  }

  function hideAfter() {
    cy.getElementById('unified_block').style('opacity', 0);
    cy.nodes('[type="ontology"]').style('opacity', 0);
    cy.edges('[type="mapping"]').style('opacity', 0);
  }

  // Wire toggle
  const toggle = document.querySelector("#beforeAfterToggle"); // your checkbox
  toggle.addEventListener("change", () => {
    const isAfter = toggle.checked;
    updateModeLabel(isAfter);
    if (isAfter) { revealAfter(); } else { hideAfter(); }
  });

  // Example content
  addContainers();
  addSourceMapping("dyn_acc", "accounts", "cust_unified", "Customer (Unified)", 0);
  addSourceMapping("dyn_con", "contacts", "cust_unified2", "Customer (Unified)", 1);
  addSourceMapping("dyn_opp", "opportunities", "txn_unified", "Transaction (Unified)", 2);

  cy.fit();
</script>
